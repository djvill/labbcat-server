<?xml version="1.0" encoding="utf-8"?>
<project name="nzilbb.labbcat.server" default="all" basedir=".">
  <description> LaBB-CAT servlets </description>
  <!-- set global properties for this build -->
  <xmlproperty file="config.xml" />
  <property name="src" location="."/>
  <property name="dist" location="./bin"/>
  <property name="lib" location="./lib"/>
  <property name="javadoc" location="docs/javadoc"/>
  <property name="build"   location="build_${ant.project.name}"/>
  <property name="srcfiles" value="nzilbb/labbcat/server/**/*.java" /> 
  <property name="resources" value="nzilbb/labbcat/server/locale/*.properties" /> 
  <property name="testsrcfiles" value="nzilbb/labbcat/server/**/Test*.java" />
 
  <target name="all" depends="compile,dist">
  </target>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <!-- Get glassfish open-source implementation of javax.json -->    
    <get src="http://www.java2s.com/Code/JarDownload/javax.json/javax.json-1.0.jar.zip" 
	 dest="${lib}/javax.json-1.0.jar.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="${lib}/javax.json-1.0.jar.zip" dest="${lib}"></unzip>
    <move
        file="${lib}/javax.json-1.0.jar"
        tofile="${lib}/javax.json.jar"
        />
    <!-- Get commons libraries -->
    <get src="https://downloads.apache.org/commons/csv/binaries/commons-csv-1.8-bin.zip" 
	 dest="lib/commons-csv-1.8-bin.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="lib/commons-csv-1.8-bin.zip" dest="lib">
      <patternset>
        <include name="commons-csv-1.8/commons-csv-1.8.jar"/>
      </patternset>
    </unzip>
    <move
        file="lib/commons-csv-1.8/commons-csv-1.8.jar"
        tofile="lib/commons-csv.jar"
        />
    <get src="https://downloads.apache.org/commons/fileupload/binaries/commons-fileupload-1.4-bin.zip" 
	 dest="lib/commons-fileupload-1.4-bin.zip" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>
    <unzip src="lib/commons-fileupload-1.4-bin.zip" dest="lib">
      <patternset>
        <include name="commons-fileupload-1.4-bin/commons-fileupload-1.4.jar"/>
      </patternset>
    </unzip>
    <move
        file="lib/commons-fileupload-1.4-bin/commons-fileupload-1.4.jar"
        tofile="lib/commons-fileupload.jar"
        />
  </target>

  <target name="gitlibs" description="Ensure we have the jar libraries we need">
    <get src="https://github.com/nzilbb/ag/blob/master/bin/nzilbb.ag.jar?raw=true" 
	 dest="${lib}" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>    
    <get src="https://github.com/nzilbb/labbcat-java/blob/master/bin/nzilbb.labbcat.jar?raw=true" 
	 dest="${lib}" 
	 skipexisting="true"
	 verbose="true"
	 usetimestamp="true"/>    
  </target>

  <target name="compile" depends="init,gitlibs"
          description="Compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
	   includes="${srcfiles}"
	   excludes="${testsrcfiles} **/package-info.java"
	   classpath="${config.tomcat}/lib/servlet-api.jar;${lib}/commons-csv.jar;${lib}/commons-fileupload.jar;${lib}/nzilbb.ag.jar;${lib}/javax.json.jar"
	   listfiles="yes"
	   target="${config.classversion}"
	   source="${config.classversion}"
	   debug="on"
	   includeantruntime="false"
           >
      <compilerarg value="-Xlint"/>
    </javac>
  </target>

  <target name="dist" depends="compile"
          description="Generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    
    <!-- Put everything in ${build} into the ${ant.project.name}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" 
	 basedir="${build}"
         comment="version ${DSTAMP}.${TSTAMP}">
      <!-- include l10n resources -->
      <fileset dir="${src}" includes="${resources}" />
      <!-- include source code -->
      <fileset dir="${src}" includes="${srcfiles}" />
      <!-- include this build file -->
      <fileset dir="." includes="build.xml" />      
    </jar>
    <delete dir="${build}"/>
  </target>

  <target name="javadoc" depends="init,dist"
          description="Document the source" >
    <javadoc destdir="${javadoc}"
             classpath="${config.tomcat}/lib/servlet-api.jar;${lib}/commons-csv.jar;${lib}/commons-fileupload.jar;${lib}/nzilbb.ag.jar;${lib}/javax.json.jar"
             packagenames="nzilbb.labbcat.server.servlet nzilbb.labbcat.server.db"
             access="public"
	     Author="yes"
             Windowtitle="nzilbb.labbcat.server"
             Overview="nzilbb/labbcat/server/overview.html"
             stylesheetfile="doc-files/style.css"
             noqualifier="all"
             bottom="&lt;a rel='license' href='http://creativecommons.org/licenses/by-sa/2.0/'&gt;&lt;img alt='CC-BY-SA Creative Commons Licence ' src='/labbcat-server/cc-by-sa.svg' title='This work is licensed under a Creative Commons Attribution-ShareAlike 2.0 Generic License' /&gt;&lt;/a&gt;&lt;a rel='author' href='https://www.canterbury.ac.nz/nzilbb/'&gt;&lt;img src='/labbcat-server/nzilbb.svg' alt='Te Kāhui Roro Reo | The New Zealand Institute of Language, Brain and Behaviour' title='&amp;copy; ${TODAY} NZILBB'&gt;&lt;/a&gt;"             >
      <fileset dir="${src}" includes="${srcfiles}" excludes="${testsrcfiles}" />
    </javadoc>
  </target>

  <target name="test" depends="dist" description="Run nzilbb.labbcat.server unit tests">
    <javac srcdir="${src}" destdir="."
	   includes="${testsrcfiles}"
	   classpath=".;${config.junitjar};${dist}/${ant.project.name}.jar;${lib}/commons-csv.jar;${lib}/nzilbb.ag.jar;${lib}/antlr-runtime-4.7.2.jar;${lib}/nzilbb.labbcat.jar;${lib}/javax.json.jar"
	   listfiles="yes"
	   target="8"
	   source="8"
	   debug="on"
	   includeAntRuntime="false"
	   >
      <compilerarg value="-Xlint"/>
    </javac>
    <junit
	haltonfailure="true"
	fork="true"
	>
      <classpath>
	<pathelement path=".;${dist}/${ant.project.name}.jar;${config.junitjar};${lib}/commons-csv.jar;${lib}/nzilbb.ag.jar;${lib}/antlr-runtime-4.7.2.jar;${lib}/nzilbb.labbcat.jar;${lib}/javax.json.jar"/>
      </classpath>
      <jvmarg value="-ea"/>
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="${src}" includes="${testsrcfiles}"/>
      </batchtest>
    </junit>
  </target>

  <target name="i18n"
          description="Extract resources for localization">
    <exec executable="ng" dir="user-interface" failonerror="true">
      <arg value="xi18n"/>
      <arg value="labbcat-view"/>
      <arg value="--output-path"/>
      <arg value="src/locale"/>
    </exec>
    <exec executable="ng" dir="user-interface" failonerror="true">
      <arg value="xi18n"/>
      <arg value="labbcat-edit"/>
      <arg value="--output-path"/>
      <arg value="src/locale"/>
    </exec>
    <exec executable="ng" dir="user-interface" failonerror="true">
      <arg value="xi18n"/>
      <arg value="labbcat-admin"/>
      <arg value="--output-path"/>
      <arg value="src/locale"/>
    </exec>
  </target>

  <target name="user-interface"
          description="Build the user-interface apps"
          depends="user-interface-common,view-user-interface,edit-user-interface,admin-user-interface">
  </target>  
  <target name="user-interface-common"
          description="Build the common library used by all three UI apps">
    <exec executable="ng"
          dir="user-interface"
          failonerror="true">
      <arg value="build"/>
      <arg value="labbcat-common"/>
      <arg value="--prod"/>
    </exec>
  </target>
  <target name="view-user-interface"
          description="Build the read-only user interface app">
    <exec executable="ng"
          dir="user-interface"
          failonerror="true">
      <arg value="build"/>
      <arg value="--localize"/>
      <arg value="labbcat-view"/>
      <arg value="--prod"/>
      <arg value="--outputPath=${config.local-labbcat-path}/user-interface"/>
    </exec>
  </target>
  <target name="edit-user-interface"
          description="Build the read-write user interface app">
    <exec executable="ng"
          dir="user-interface"
          failonerror="true">
      <arg value="build"/>
      <arg value="--localize"/>
      <arg value="labbcat-edit"/>
      <arg value="--prod"/>
      <arg value="--outputPath=${config.local-labbcat-path}/edit/user-interface"/>
    </exec>
  </target>
  <target name="admin-user-interface"
          description="Build the read-write user interface app">
    <exec executable="ng"
          dir="user-interface"
          failonerror="true">
      <arg value="build"/>
      <arg value="--localize"/>
      <arg value="labbcat-admin"/>
      <arg value="--prod"/>
      <arg value="--outputPath=${config.local-labbcat-path}/admin/user-interface"/>
    </exec>
  </target>

  <target name="clean"
          description="Clean up" >
    <delete>
      <fileset dir="${build}" includes="**/*.class"/>
    </delete>
  </target>
</project>
