.attribute .value .description {
    padding-left: 10px;
}
.attribute .value .description:before {
    content: '(';
}
.attribute .value .description:after {
    content: ')';
}

.links {
    display: flex;
    flex-direction: row;
    justify-content: center;
}
span.number {
    display: flex;
    flex-direction: row;
}

.password {
    animation-name: roll-down;
    animation-duration: 1s;
    width: 50%;
    margin: auto;
}
#password-form input {
    width: 100%;
}
.links lib-link {
    padding: 10px;
}

/* Thanks: https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */
.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}
.grow-wrap::after {
  /* Note the weird space! Needed to preventy jumpy behavior */
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}
.grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}
.grow-wrap > textarea,
.grow-wrap::after {
  /* Identical styling required!! */
  border: 1px solid black;
  padding: 0.5rem;
  font: inherit;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}

.grow-wrap {
    max-height: 200px;
    max-width: 400px;
    overflow-y: clip;
}
.grow-wrap > textarea {
    max-height: 180px;
    overflow-y: auto;
}
